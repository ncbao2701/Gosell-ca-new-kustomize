apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: item-etl-service
  name: item-etl-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: item-etl-service
  strategy: {}
  template:
    metadata:
      labels:
        app: item-etl-service
    spec:
      containers:
      - image: registry.fke.fptcloud.com/81afa4a1-02f9-4191-8f77-1a07e8686f7a/itemetlservice:V.1.0.1
        name: item-etl-service
        ports:
        - containerPort: 8086
        resources: {}
        # livenessProbe:
        #   httpGet:
        #     path: /management/health
        #     port: 8086
        #     scheme: HTTP
        #   initialDelaySeconds: 600
        #   timeoutSeconds: 5
        #   periodSeconds: 10
        #   successThreshold: 1
        #   failureThreshold: 3
        # readinessProbe:
        #   httpGet:
        #     path: /management/health
        #     port: 8086
        #     scheme: HTTP
        #   initialDelaySeconds: 120
        #   timeoutSeconds: 5
        #   periodSeconds: 10
        #   successThreshold: 1
        #   failureThreshold: 3
        env: 
          - name: SPRING_PROFILES_ACTIVE
            value: "prod,swagger"
          - name: SPRING_CLOUD_CONFIG_URI
            value: "http://admin:admin@jhipster-registry.default.svc.cluster.local:8761/config"
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:postgresql://172.16.111.46:5432/postgres?currentSchema=item-etl-service"
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "postgres"
          - name: JHIPSTER_SLEEP
            value: "10"
          - name: SPRING_DATA_ELASTICSEARCH_CLUSTER_NODES
            value: "172.16.111.8:9300"
          - name: "JAVA_OPTS"
            value: "-Xms256M -Xmx1G -Dhttp.agent=curl/7.55.1"
      imagePullSecrets:
        - name: fpt-cloud-registry
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: item-etl-service
  name: item-etl-service
spec:
  ports:
  - port: 8086
    protocol: TCP
    targetPort: 8086
  selector:
    app: item-etl-service
status:
  loadBalancer: {}
