apiVersion: v1
data:
  affiliateService-prod.yml: |-
    spring:
        data:
            jest:
                uri: http://172.16.111.23:9022 #http://es5.mediastep.com:9202
                read-timeout: 180000

        datasource:
            hikari:
                maximum-pool-size: 1000

        jpa:
            show-sql: true
            properties:
                hibernate.show_sql: true
                hibernate.format_sql: true
                hibernate.cache.use_second_level_cache: true
                hibernate.cache.use_query_cache: false

        redis:
            host: redis-0.redis.redis
            port: 6379

    #    cloud:
    #        stream:
    #            kafka:
    #                binder:
    #                    brokers: 192.168.1.228:9009
    #                    zk-nodes: 192.168.1.228:2189
    hystrix:
        command:
            createPartner:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 30000
                            interruptOnTimeout: false
                fallback:
                    enabled: false
            updatePartner:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 30000
                            interruptOnTimeout: false
                fallback:
                    enabled: false
            default:
                execution:
                    isolation:
                        # See https://github.com/spring-cloud/spring-cloud-netflix/issues/1330
                        thread:
                            timeoutInMilliseconds: 10000
                            interruptOnTimeout: false
    # ===================================================================
    # Item Services specific properties
    # ===================================================================
    # application:
    #     useSearchRepo: true
    # ===================================================================
    # Business specific properties
    # ===================================================================
    business:
        deal:
            main:
                fetchSize: 50
        product:
            main:
                fetchSize: 50

    logging:
        level:
            ROOT: DEBUG
            io.github.jhipster: DEBUG
            com.mediastep.gosell.affiliate: DEBUG

    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://redis-0.redis.redis:6379
    application:
        itemProgressHandlingTimeoutInMinutes: 5
        webGsDashboardDomain: https://ca-gosell.mediastep.ca
  application.yml: "#common configuration shared between all applications\nbeecow:\n
    \   debugMode: true\n    gateway:\n        userService:\n            user:\n                defaultLocation:
    US\n                defaultLanguage: en\n                defaultAvatarUrl:\n                    default:
    https://dm4fv4ltmsvz0.cloudfront.net/1000.jpg\n                    male: https://dm4fv4ltmsvz0.cloudfront.net/1001.jpg\n
    \                   female: https://dm4fv4ltmsvz0.cloudfront.net/1002.jpg\n                activationKeyValidTime:
    15\n                activationKeyValidTimeUnit: MINUTES\n                resetKeyValidTime:
    24\n                resetKeyValidTimeUnit: HOURS\n            guest:\n                createRetry:
    5\n            beecowUser:\n                specialBeecowUser:\n                    langKeys:
    my-zawgyi # list of special beecowuser languages, separated by ','\n        emailService:\n
    \           senderEmail: welcome@gosell.vn\n            contactUsEmail: cskh@gosell.vn\n
    \   order:\n        deliveryService:\n            giaohangnhanh:\n                ips:
    0.0.0.0/0\n            giaohangtietkiem:\n                ips: 0.0.0.0/0\n    payment:\n
    \       vnpay:\n            ips: 0.0.0.0/0\n    freeshipping:\n        eachUser:\n
    \           perDay: 3\n        campaigns:\n            -   enable: false\n                fromTime:
    2018-06-29T00:00:00+07:00\n                toTime: 2020-11-16T16:40:00+07:00\n
    \               maxDiscount: 20000\n                totalAmount: 200000\n                excludeGhnIDs:
    3, 10, 12\n                excludeGhtkIDs:\n                itemTypes: DEAL,PRODUCT_DEAL,BUSINESS_PRODUCT\n
    \           -   enable: false\n                fromTime: 2018-04-27T00:17:00+07:00\n
    \               toTime: 2019-11-27T17:40:00+07:00\n                maxDiscount:
    \n                totalAmount: 500000\n                excludeGhnIDs: 3, 10, 12\n
    \               excludeGhtkIDs:\n                itemTypes: PRODUCT_DEAL\n            -
    \  enable: false\n                fromTime: 2018-04-27T00:17:00+07:00\n                toTime:
    2019-11-27T17:40:00+07:00\n                maxDiscount: 50000\n                totalAmount:
    \n                excludeGhnIDs: 3, 10, 12\n                excludeGhtkIDs:\n
    \               itemTypes: BUSINESS_PRODUCT\n    loyalty:\n        point:\n            purchase:\n
    \               rate: 0.01\n        reminder:\n            inactivity:\n                period:
    0, 1, 7, 14, 30\n                unit: days # months, years\n                closedPrize:
    10000\n    \n    feign:\n        client:\n            logger:\n                level:
    FULL\n\nconfigserver:\n    name: Docker JHipster (Beecow) Registry\n    status:
    Connected to the JHipster(Beecow) Registry running in Docker QA\n\njhipster:\n
    \   security:\n        authentication:\n            jwt:\n                secret:
    b1b46ec3d7f8295e66c7e43d2f1c50eb94a8a5d4\n                # Token is valid 100
    days\n                tokenValidityInSeconds: 8640000\n                # Token
    for remember me is valid 365 days\n                tokenValidityInSecondsForRememberMe:
    31536000\n    logging:\n        logstash: # forward logs to ELK\n            enabled:
    true\n            host: 172.16.111.23\n    metrics:\n        logs: # report metrics
    in the logs\n            enabled: true\n            reportFrequency: 60 # in seconds\n
    \   async:\n        core-pool-size: 10\n        max-pool-size: 100\n    mail:\n
    \       from: welcome@gosell.vn\neureka:\n    client:\n        serviceUrl:\n            defaultZone:
    http://admin:admin@ca-registry.ca.svc.cluster.local:8761/eureka/\nspring:\n    jackson:\n
    \       default-property-inclusion: non_null\n    cloud:\n        stream:\n            kafka:\n
    \               binder:\n                    # brokers: 172.31.8.103:9092\n                    #
    zk-nodes: 172.31.11.193:2181/kafka\n                    brokers: 172.16.111.23:9092\n
    \                   zk-nodes: 172.16.111.23:2181\n    data:\n        jest:\n            #
    uri: http://elasticsearch.mediastep.ca:9200\n            uri: http://172.16.111.23:9022\n
    \   zipkin:\n        enabled: true\n        baseUrl: http://172.16.111.23:9411\n
    \   # mail:\n    #     host: in-v3.mailjet.com\n    #     port: 587\n    #     username:
    f17ca1565b3570ad1dba0d30edb01c09\n    #     password: fba9424ddbd124ec473df5d9db90799c\n
    \   #     protocol: smtp\n    #     tls: true\n    #     properties:\n    #         mail:\n
    \   #             smtp:\n    #                 auth: true\n    #                 ssl.enable:
    false\n    #                 starttls.enable: true\n    #                 debug:
    true\n    # mail:\n    #     host: smtp.sparkpostmail.com\n    #     port: 587\n
    \   #     username: SMTP_Injection\n    #     password: a9645f093d87c0e47a3a42b0e1575fd5911f72a6\n
    \   #     protocol: smtp\n    #     tls: true\n    #     properties:\n    #         mail:\n
    \   #             smtp:\n    #                 auth: true\n    #                 ssl.enable:
    false\n    #                 starttls.enable: true\n    #                 debug:
    true\n    ###sendinblue\n    # mail:\n    #   host: smtp-relay.sendinblue.com\n
    \   #   port: 587\n    #   username: an.truong@mediastep.com\n    #   password:
    QdJ0vKHTSLch9mWB\n    #   protocol: smtp\n    #   tls: true\n    #   properties:\n
    \   #     mail:\n    #       smtp:\n    #         auth: true\n    #         ssl.enable:
    false\n    #         starttls.enable: true\n    #         debug: true\n    mail:\n
    \     host: smtp.elasticemail.com\n      port: 465\n      username: root@mediastep.com\n
    \     password: 87adbb11-3474-4adf-923c-a6f16c121204\n      protocol: smtp\n      tls:
    true\n      properties:\n        mail:\n          smtp:\n            auth: true\n
    \           ssl.enable: true\n            starttls.enable: true\n            debug:
    true\naws:\n    cdn:\n        status: https://dhsfy2j3z9bm3.cloudfront.net\n        item:
    https://d3a0f2zusjbf7r.cloudfront.net\n        cupid: https://d1gx7yxn0p91c9.cloudfront.net\n
    \       general: https://dm4fv4ltmsvz0.cloudfront.net\n        doc: https://d2wimnuwlet7ii.cloudfront.net\n
    \       banner: https://d8qbqtt58lzda.cloudfront.net\n        job: https://d3sla10qaze016.cloudfront.net\n
    \       accessory: https://d36knys0k45mi9.cloudfront.net\nmanagement:\n    health:\n
    \       elasticsearch:\n            response-timeout: 30000\n        mail:\n            enabled:
    false\n            \narchaius.deployment.environment: QA\nserver:\n    undertow:\n
    \       worker-threads: 512\ngosell:\n    cron:\n        clearCache:\n            permission:
    0 0/1 * 1/1 * ? #Every minute\n    security:\n        authentication:\n            jwt:\n
    \               storeTokenValidityInSeconds: 21600000\n                storeTokenValidityInSecondsForRememberMe:
    21600000 # 6hours\n                staffTokenValidityInSecondsForRememberMe: 1800000
    # 30min\n\ncloud:\n    aws:\n        region:\n            static: ap-southeast-1\n
    \       stack:\n            auto: false\n        credentials:\n            accessKey:
    AKIAZBAS6DT6C2CC7ZLJ\n            secretKey: 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
    \           \n\nlogging:\n    level:\n        ROOT: DEBUG\n        io.github.jhipster:
    DEBUG\n        com.mediastep.gosell.storefront: DEBUG\n        com.mediastep.beecow:
    DEBUG\n        "
  beecowGateway-prod.yml: |+
    jhipster:
        cors: #By default CORS are not enabled. Uncomment to enable.
            exposed-headers: X-Total-Count, Link, X-Error-Key, X-Total-Revenue, x-storeserviceapp-error
        security:
            authentication:
                jwt:
                    # Token for remember me is valid 30 minute
                    tokenValidityInSecondsForRememberMe: 1800 #86400 #seconds
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://redis-0.redis.redis:6379
    gosell:
        security:
            authentication:
                jwt:
                    # Token for store is valid 1 day
                    storeTokenValidityInSecondsForRememberMe: 86400000 #milliseconds
                    # Token for staff is valid 5 minutes
                    staffTokenValidityInSecondsForRememberMe: 300000 #milliseconds


    zuul:
        semaphore.max-semaphores: 512
        host:
            connect-timeout-millis: 5000
            socket-timeout-millis: 60000 # must equal to max hystrix timeout
    ribbon:
        MaxTotalConnections: 5000
        MaxConnectionsPerHost: 512
        ReadTimeout: 60000 # must equal to max hystrix timeout
        ConnectTimeout: 5000
    hystrix:
        command:
            default:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 10000
            mainservice:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 25000
            affiliateservice:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 10000

  beehiveServices-prod.yml: |-
    logging:
      level:
        com.mediastep.beehive: DEBUG
    application:
      default-firebase-config:
        firebase-database-url: https://firebase-qa.firebaseio.com/
        firebase-api-key-android: AIzaSyAY7x9cYHCQKmYnuYerfXM3NKoAQcm9G1w
        firebase-app-id-android: '1:978381762368:android:bd6df837957c655f'
        firebase-api-key-ios: AIzaSyCyDQTyTQkp7P_f4hQg0_aRgeRpBMBlfyM
        firebase-app-id-ios: '1:978381762368:ios:5bb20311621d6652'
        firebase-client-id-ios: 978381762368-hrphavuuogu26jkjnooskoph7mmpv6n2.apps.googleusercontent.com
        firebase-sender-id-ios: 978381762368
      jenkins:
        baseUrl: cloud-ci-master.mediastep.com
        basicAuth: ZmVpZ25jbGllbnQ6N2FlNWU5ZmI0ZjQ1Mjk0N2RjZDQ5OWIzZGNhYjA1Mjk=
        buildPath:
          web: >-
            /view/Websites/job/storefront-qa/buildWithParameters/
          android: /view/Android/job/android-gosell-qa/buildWithParameters/
          ios: /view/IOS/job/ios-gosell-auto-qa/buildWithParameters/
          updateSubDomain: /view/Websites/job/update-subdomain-qa/buildWithParameters
          updateCustomDomain: >-
            /view/Website/job/websites/job/update-custom-domain-qa/buildWithParameters
          removeCustomDomain: >-
            /view/Website/job/websites/job/delete-custom-domain-qa/buildWithParameters
          ssr: >-
            /view/Websites/job/storefront-qa/buildWithParameters
      trial:
        time: 15
        unit: DAYS
      webGsDashboardDomain: 'https://ca-gosell.mediastep.ca'
      webGsDashboardCallBackUrl: /payment/callback
      webGsDashboardVNPTCallBackUrl: '/payment/epay-callback?description={0}'
    spring:
      data:
        # elasticsearch:
        #   cluster-name: null
        #   cluster-nodes: 'elasticsearch.mediastep.ca:9300'
        #   client.transport.ignore_cluster_name: true
        jest:
          uri: http://172.16.111.23:9022
          readTimeout: 60000
    jhipster:
      cache: # Cache configuration
        redis: # Redis configuration
          server: 'redis://redis-0.redis.redis:6379'
  billingInfoServices-prod.yml: "# application:\n#     useEsQuery: false\nlogging:\n
    \   level:\n        com.mediastep.beecow.billing: DEBUG\nspring:\n    jpa:\n        show-sql:
    true\n    # data:\n    #     elasticsearch: \n    #         cluster-name: \n    #
    \        cluster-nodes: elasticsearch.mediastep.ca:9300\n    #         client.transport.ignore_cluster_name:
    true\njhipster:\n    cache: # Cache configuration\n        redis: # Redis configuration\n
    \           server: redis://redis-0.redis.redis:6379"
  callCenterServices-prod.yml: |-
    logging:
        level:
            com.mediastep.gosell.callcenter: DEBUG

    spring:
        data:
            jest:
                # uri: http://10.10.0.15:9202
                uri: http://172.16.111.23:9022

    kafka:
        bootstrap-servers: 172.16.111.23:9092

    application:
        vht:
            apiKey: SKoSwiyFPDK9T8qgMuvad6urSgBRLuLhr9
            apiSecret: TEozUFBtNmZzU0p4TG1JT2RkdXVra3pHN2ZmZEsyRQ==
            baseUrl: https://acd-api.vht.com.vn/rest
        email:
            gosellSupportEmail: live.str.bc@gmail.com
        webGsDashboardDomain: https://ca-gosell.mediastep.ca
        webGsDashboardCallBackUrl: /payment/callback
        webGsDashboardVNPTCallBackUrl: /payment/epay-callback?description={0}

    management:
        health:
            elasticsearch:
                enabled: false
  cashbookService-prod.yml: |-
    spring:
        data:
            jest:
                uri: http://172.16.111.23:9022 #http://es5.mediastep.com:9202
                read-timeout: 180000

        datasource:
            hikari:
                maximum-pool-size: 1000

        jpa:
            show-sql: true
            properties:
                hibernate.show_sql: true
                hibernate.format_sql: true
                hibernate.cache.use_second_level_cache: true
                hibernate.cache.use_query_cache: false

        redis:
            host: redis-0.redis.redis
            port: 6379

    logging:
        level:
            ROOT: DEBUG
            io.github.jhipster: DEBUG
            com.mediastep.gosell.cashbook: DEBUG
  catalogServices-prod.yml: |-
    spring:
      redis:
        host: redis-0.redis.redis
        port: 6379
        database: 0
      jpa:
        show-sql: true
    logging:
      level:
        com.mediastep.beecow.catalog: DEBUG
  facebookServices-prod.yml: |-
    logging:
        level:
            com.mediastep.gosell.facebook: DEBUG
    application:
        webGsFacebookCreditCallBackUrl: https://ca-gosell.mediastep.ca/payment/callback
    facebook:
        adAppSecret: 7df3ae5409b0c926197c15f65507f5dc
        # accessTokenBusiness:
        # businessAppId: 1893566387566234
        # businessAppSecret: 23649a073994cfc78e436ced0b007008
        #businessAppId: 2617004701933274
        #businessAppSecret: 7df3ae5409b0c926197c15f65507f5dc
        # businessAppId: 2617004701933274
        # businessAppSecret: 7df3ae5409b0c926197c15f65507f5dc
        # businessAppId: 1172612549918082
        # businessAppSecret: 7569a0b10a67d6917878e82881384fe2
        businessAppId: 2347321872092664
        businessAppSecret: 753740ccb136dd9a29aaf07b8f6ee545
    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: 'redis://redis-0.redis.redis:6379'
  integrateOrderService-prod.yml: |-
    kafka:
      bootstrapServers: 172.16.111.23:9092
    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://redis-0.redis.redis:6379
  intergrateaffiliateservice-prod.yml: |2-

    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://redis-0.redis.redis:6379

    kafka:
        bootstrapServers: 172.16.111.23:9092
  inventoryservices-prod.yml: "jhipster:\n  cache: # Cache configuration\n    redis:
    # Redis configuration\n      server: redis://redis-0.redis.redis:6379\nspring:\n
    \   kafka:\n        consumer:\n          properties:\n            auto-sync-stock-topic:
    autoSyncStock\n            auto-sync-stock-group: inventoryServices\n            auto-sync-stock-auto-startup:
    true   \n        bootstrap-servers: 172.16.111.23:9092\n    jpa:\n        show-sql:
    true\n        properties:\n            hibernate.show_sql: true\n            hibernate.format_sql:
    true\n            hibernate.cache.use_second_level_cache: true\n            hibernate.cache.use_query_cache:
    false"
  itemService-prod.yml: |
    #spring:
    #    data:
    #        elasticsearch:
    #            cluster-name:
    #            cluster-nodes: a107624aff525a698b6504b52f7a7876.ap-southeast-1.aws.found.io:9343
    #            properties:
    #                shield.user: readwrite:tpr25wjhc7c
    #                shield.transport.ssl: true
    spring:
        cloud:
            stream:
                bindings:
                    itemLanguageChannel:
                        destination: itemLanguageChannel
                        binder: kafka
                        content-type: application/json
                        producer:
                            header-mode: embeddedHeaders
                        group: itemServices
        datasource:
            hikari:
                maximum-pool-size: 1000
        data:
            jest:
                uri: http://172.16.111.23:9022
                readTimeout: 60000
    business:
        deal:
            main:
                fetchSize: 50
        product:
            main:
                fetchSize: 50
    logging:
        level:
            ROOT: DEBUG
            com.mediastep.beecow.item: DEBUG
            com.mediastep.beecow.item.service.impl.ProductServiceImpl: TRACE

    hystrix:
        command:
            RestControllerCommand:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 35000
                            interruptOnTimeout: false
                fallback:
                    enabled: false
            suggestProductModelByName:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 20000
                            interruptOnTimeout: true
                fallback:
                    enabled: false
            getBhItem:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 15000
                            interruptOnTimeout: true
                fallback:
                    enabled: false
            findByBranchIdsAndItemIdsMultiple:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 8000
                            interruptOnTimeout: true
                fallback:
                    enabled: false
            default:
                execution:
                    isolation:
                        thread:
                            timeoutInMilliseconds: 10000
                            interruptOnTimeout: false
    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://redis-0.redis.redis:6379
    application:
        itemProgressHandlingTimeoutInMinutes: 5
        currencyAPIKey: e73f0f00-39a7-11ec-9e08-154f6061b8a3
        webGsDashboardDomain: https://ca-gosell.mediastep.ca
  itemetlservice-prod.yml: |
    spring:
        data:
            jest:
                uri: http://172.16.111.23:9022 #http://es5.mediastep.com:9202
                read-timeout: 180000
        datasource:
            hikari:
                maximum-pool-size: 1000
        jpa:
            show-sql: true
            properties:
                hibernate.show_sql: true
                hibernate.format_sql: true
                hibernate.cache.use_second_level_cache: true
                hibernate.cache.use_query_cache: false
        kafka:
            bootstrap-servers: 172.16.111.23:9092
        lifecycle:
            timeout-per-shutdown-phase: 1m
    logging:
        level:
            com.mediastep.gosell.item.etl: DEBUG
    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://redis-0.redis.redis:6379
    server:
        shutdown: graceful
    application:
        inventorySummaryBranchCdc:
            pluginName: pgoutput
            connectorClass: io.debezium.connector.postgresql.PostgresConnector
            offsetStorage: org.apache.kafka.connect.storage.FileOffsetBackingStore
            offsetStorageFileFilename: inventory_summary_branch_offset.DAT
            offsetFlushIntervalMs: 60000
            connectorName: inventory-summary-branch-connector
            databaseServerName: item-etl-service
            databaseHostname: 172.16.111.33
            databasePort: 5432
            databaseUser: postgres
            databasePassword: postgres
            databaseDbname: postgres
            tableWhitelist: item-services.inventory_summary_branch,item-services.cdc_update_es,item-services.item_model
            skippedOperations: d
  jhipster-registry-prod.yml: |-
    eureka:
      server:
        expected-client-renewal-interval-seconds: 2
      #   eviction-interval-timer-in-ms: 7
      # instance:
      #   lease-expiration-duration-in-seconds: 10
  jobServices-prod.yml: "beecow:\n    debug-mode: true\n    job:\n        jobService:\n
    \           jobEmailFrom: welcome@gosell.vn\n            jobEmailReplyTo: cskh@gosell.vn\n
    \           jobEmailBcc: order-dev@gosell.vn\n            recruimentPageUrl: https://www.gosell.vn/career\n
    \           \napplication:\n    defaultCompanyAvatarUrl: https://d3sla10qaze016.cloudfront.net/1510720305258.jpg\n
    \   payment:\n        webCallbackUrl: https://beecow.mediastep.com/page/{0}/checkout"
  lazadaServices-prod.yml: "hystrix:\n    enabled: true\n    client:\n        config:\n
    \           default:\n                connectTimeout: 60000\n                readTimeout:
    60000\nspring:\n  data:\n    elasticsearch: \n      cluster-name: \n      cluster-nodes:
    172.16.111.23:9300\n      client.transport.ignore_cluster_name: true\njhipster:\n
    \ cache: # Cache configuration\n    redis: # Redis configuration\n      server:
    redis://redis-0.redis.redis:6379"
  livestreamServices-prod.yml: "beecow:\n    livestreamServices:\n        application:\n
    \           envName: QA\n            changeStatusSleepTime: 3                #
    3 seconds\n            changeStatusTimeOut: 120                # 5 minutes\n            checkStreamStatusSleepTime:
    30          # 1 minutes\n            waitStreamStatusActiveTimeout: 120      #
    5 minutes\n        googleAuth:\n            clientId: 978381762368-sgultn4v5dssl86fapephlokq64ram87.apps.googleusercontent.com\n
    \           clientSecret: BQQ3ft8iaHmQ-D7ZUYGnPrew\n            # clientId: 978381762368-ev24m2v0o1r3iq8qe65im50fkeu8qjkq.apps.googleusercontent.com\n
    \           # clientSecret: 9_3rfG1DO0DPfmzWC2kctN5b\n        firebase:\n            private-key-file-path:
    classpath:config/firebase-admin-qa.json\n            url: https://beecow-qa.firebaseio.com\n
    \           projectId: beecow-qa\n            fcmApi: https://fcm.googleapis.com/v1/projects/\n
    \           fcmAuthApi: https://www.googleapis.com/auth/firebase.messaging\n            livestreamNode:
    Livestream\n            timeout: 30\n            timeoutUnit: SECONDS\n        dacast:\n
    \           apiKey: 1639985295BM0wnna5l8FFIDXbNXf19LZPDkrZaVHl\n            url:
    https://developer.dacast.com\n            version: v2\n            expiredLiveStreamOffset:
    30 #days\n            maxLiveStreamPerDay: 30 #times/day\n            maxLiveStreamDuration:
    60 #minutes\n            heartBeatLiveStreamOffset: 5 #minutes\n            userId:
    b0447034-c90f-48e6-9f08-3cd4431f4545\n            \nspring:\n  data:\n    elasticsearch:
    \n      cluster-name: elasticsearch\n      cluster-nodes: 172.16.111.23:9300\n
    \     client.transport.ignore_cluster_name: true"
  logback-spring.xml: |
    <?xml version="1.0" encoding="UTF-8"?>

    <configuration scan="true">
        <include resource="org/springframework/boot/logging/logback/base.xml"/>

    <!-- The FILE and ASYNC appenders are here as examples for a production configuration -->
    <!--
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>logFile.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>90</maxHistory>
            </rollingPolicy>
            <encoder>
                <charset>utf-8</charset>
                <Pattern>%d %-5level [%thread] %logger{0}: %msg%n</Pattern>
            </encoder>
        </appender>

        <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
            <queueSize>512</queueSize>
            <appender-ref ref="FILE"/>
        </appender>
    -->

        <logger name="com.mediastep.beecow.gateway" level="DEBUG"/>
        <logger name="com.mediastep.beecow.message" level="DEBUG"/>
        <logger name="com.mediastep.beecow.user" level="DEBUG"/>

        <logger name="javax.activation" level="WARN"/>
        <logger name="javax.mail" level="WARN"/>
        <logger name="javax.xml.bind" level="WARN"/>
        <logger name="ch.qos.logback" level="WARN"/>
        <logger name="com.codahale.metrics" level="WARN"/>
        <logger name="com.netflix" level="WARN"/>
        <logger name="com.netflix.discovery" level="INFO"/>
        <logger name="com.ryantenney" level="WARN"/>
        <logger name="com.sun" level="WARN"/>
        <logger name="com.zaxxer" level="WARN"/>
        <logger name="io.undertow" level="WARN"/>
        <logger name="org.apache" level="WARN"/>
        <logger name="org.apache.catalina.startup.DigesterFactory" level="OFF"/>
        <logger name="org.bson" level="WARN"/>
        <logger name="org.elasticsearch" level="WARN"/>
        <logger name="org.hibernate.validator" level="WARN"/>
        <logger name="org.hibernate" level="WARN"/>
        <logger name="org.hibernate.ejb.HibernatePersistence" level="OFF"/>
        <logger name="org.springframework" level="WARN"/>
        <logger name="org.springframework.web" level="WARN"/>
        <logger name="org.springframework.security" level="WARN"/>
        <logger name="org.springframework.cache" level="WARN"/>
        <logger name="org.thymeleaf" level="WARN"/>
        <logger name="org.xnio" level="WARN"/>
        <logger name="springfox" level="WARN"/>
        <logger name="sun.rmi" level="WARN"/>
        <logger name="liquibase" level="WARN"/>
        <logger name="LiquibaseSchemaResolver" level="INFO"/>
        <logger name="sun.rmi.transport" level="WARN"/>

        <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
            <resetJUL>true</resetJUL>
        </contextListener>

        <root level="#logback.loglevel#">
            <appender-ref ref="CONSOLE"/>
        </root>

    </configuration>
  mailService.yaml: |-
    logging:
        level:
            com.mediastep.gosell.callcenter: DEBUG

    kafka:
        bootstrap-servers: 172.16.111.23:9092

    application:
        gosellDomain: gosell.vn

    management:
        health:
            elasticsearch:
                enabled: false
  mainService-prod.yaml: |
    configserver:
      name: JHipster Registry config server
      status: Connected to the JHipster Registry config server!
    eureka:
        instance:
            #prefer-ip-address: true
            #nonSecurePort: 80
            appname: mainService
            #ip-address: ${EC2_LOCAL_IP}
    management:
        health:
            elasticsearch:
                enabled: false
    spring:
      redis:
        host: redis-0.redis.redis
        port: 6379
        database: 7
  mediaServices-prod.yml: |
    mediafile:
      amazon:
        bucketName:
          billingInfo: beecow-billinginfo-development
          liveStreamVideo: custom-gosell-livestr-qa
          exportFile: custom-gosell-file-qa
        cdn: true
        cdnEndpoint:
          status: https://dhsfy2j3z9bm3.cloudfront.net
          item: https://d3a0f2zusjbf7r.cloudfront.net
          cupid: https://d1gx7yxn0p91c9.cloudfront.net
          general: https://dm4fv4ltmsvz0.cloudfront.net
          doc: https://d2wimnuwlet7ii.cloudfront.net
          banner: https://d8qbqtt58lzda.cloudfront.net
          job: https://d3sla10qaze016.cloudfront.net
          accessory: https://d36knys0k45mi9.cloudfront.net
          liveStream: https://d3cah8h6fn1rc6.cloudfront.net
          liveStreamVideo: https://goselllive-qa.gosell.vn
          exportFile: https://gosell-file-qa.gosell.vn

    jhipster:
      cache: # Cache configuration
        redis: # Redis configuration
          server: redis://redis-0.redis.redis:6379

    spring:
      jpa:
        properties:
          hibernate.cache.use_second_level_cache: false
          hibernate.cache.use_query_cache: false
      redis:
        database: 3
    application:
      email:
        gosellSupportEmail: customerService@mediastep.com
        fromEmail: welcome@gosell.vn
        dashboardDomain: https://ca-gosell.mediastep.ca/
  messageServices-prod.yml: |-
    #common configuration shared between all applications
    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://redis-0.redis.redis:6379
    beecow:
        debugMode: true
        messageServices:
            firebase:
                # private-key-file-path: classpath:config/firebase-admin-qa.json
                private-key-file-path: https://firebase-project-ca.s3-ap-southeast-1.amazonaws.com/beecow-qa-firebase-adminsdk-fwlpz-d9853f7e4c.json
                url: https://beecow-qa.firebaseio.com
                projectId: beecow-qa
                fcmApi: https://fcm.googleapis.com/v1/projects/
                fcmAuthApi: https://www.googleapis.com/auth/firebase.messaging
                rootPath:
                userNode: Users
                roomNode: Rooms
                timeout: 30
                timeoutUnit: SECONDS
                privateKeyGosell:
                    - name: beecow-ca
                      filePath: https://firebase-project-ca.s3-ap-southeast-1.amazonaws.com/beecow-qa-firebase-adminsdk-fwlpz-d9853f7e4c.json
                    - name: gosell-ca
                      filePath: https://firebase-project-ca.s3-ap-southeast-1.amazonaws.com/gosell-ca-firebase-adminsdk-pb8yl-faca6ed45b.json
                    - name: gosell-qc-qa
                      filePath: https://firebase-project-ca.s3-ap-southeast-1.amazonaws.com/gosell-qc-qa-firebase-adminsdk-fvx4d-72544ae22f.json
                    - name: gosell-qc-qa-016to031
                      filePath: https://firebase-project-ca.s3.ap-southeast-1.amazonaws.com/gs-qc-ca-016to031-firebase-adminsdk-ect50-77cddae161.json
                    - name: gosell-qc-qa-2
                      filePath: https://firebase-project-ca.s3.ap-southeast-1.amazonaws.com/gosell-qc-qa-2-firebase-adminsdk-nryxf-10cb8304a8.json
    spring:
        data:
            jest:
                uri: http://172.16.111.23:9022
                readTimeout: 60000
  minions-prod.yml: |-
    beecow:
        debug-mode: true
        feign.client.logger.level: BASIC
        order:
            orderService:
                orderExpireCheckTime: 60000 # Check every 1m
                orderAbandonCheckTime: 300000 # Check every 5m
        voucher:
            voucherService:
                voucherGettingExpiredDateCheckTime: 86400000 # Check every day
  orderServices-prod.yml: |
    beecow:
        debug-mode: true
        feign.client.logger.level: BASIC
        order:
            website: https://beecow.mediastep.ca/
            orderService:
                orderExpirationTime: 5
                orderExpirationTimeUnit: MINUTES
                orderExpireCheckPageSize: 100
                orderExpireCheckTime: 300000 # Check if any order is expired every 5 minutes
                orderAbandonTime: 10
                orderAbandonTimeUnit: MINUTES
                orderAbandonCheckPageSize: 100
                orderAbandonCheckTime: 300000 # Check if any order is abandoned every 5 minutes
                itemWebsiteURLPrefix: https://beecow.mediastep.ca/
                itemWebsiteURLPrefixProduct: https://beecow.mediastep.ca/product/
                itemWebsiteURLPrefixDeal: https://beecow.mediastep.ca/deal/
                orderSalesEmail: welcome@beecow.com
                orderSalesEmailReplyTo: cskh@beecow.com
                orderSalesEmailBcc:
                freeShipItemId: 196369,196368,196366
                removeCODMethodDuringTet: false
                codeCoupon: U23BEECOW
            deliveryService:
                giaohangnhanh:
                    enabled: true
                    baseURL: https://testapipds.ghn.vn:9999/external/marketplace
                    clientID: 192900
                    password: egGdykvdVyccpbbz6
                    apiKey: gYPDgvqzT2mybhUV
                    apiSecretKey: 1E0410A33DA9B2CB342A6CCF0F912BF8
                giaohangtietkiem:
                    enabled: true
                    baseURL: https://dev.ghtk.vn
                    token: AFF7C489342a41fbf90342885D3C66a9d8110b9a
            paymentService:
                vnpay:
                    vnpUrl: http://sandbox.vnpayment.vn/paymentv2/vpcpay.html
                    vnpTmnCode: BPHHJWKY
                    vnpMerchant: DEMO
                    vnpVersion: 2
                    vnpCommand: pay
                    vnpHashSecret: RLNRBZPWYCSEJLUDIUVFKKFNGMSPJFOY
                    vnpOrderType: billpayment
                    vnpReturnUrlWeb: https://beecow.mediastep.ca/new-order/{0}/result
                    vnpReturnUrlMobile: https://api.mediastep.ca/orderservices/api/payment/result/vnpay
    spring:
        jpa:
            show-sql: true
        data:
            jest:
                uri: http://10.10.0.103:9022
                readTimeout: 60000
    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://10.10.0.15:6379
  orderServices2-prod.yml: "spring:\n    datasource:\n        hikari:\n            maximum-pool-size:
    50\n    jpa:\n        show-sql: true\n    cloud:\n        stream:\n            bindings:\n
    \               itemLanguageChannel:\n                    destination: itemLanguageChannel\n
    \                   binder: kafka\n                    content-type: application/json\n
    \                   group: orderServices2\n                    \nlogging:\n    level:\n
    \       org.hibernate.SQL: INFO\n        com.mediastep.beecow.message.service.NotifyService:
    \ DEBUG\n        com.mediastep.beecow.message.client.MessageServiceClient: DEBUG\n\nbeecow:\n
    \   debug-mode: true\n    feign.client.logger.level: FULL\n    order:\n        sync:\n
    \           pageSize: 20\n        orderService:\n            codMaximumPrice:
    10000000 # 10,000,000 VND\n            orderExpirationTime: 5 # 5'\n            orderExpirationTimeUnit:
    MINUTES\n            freeShip: true\n            orderAbandonTime: 15\n            orderAbandonTimeUnit:
    MINUTES\n            itemWebsiteURLPrefix: https://gomua.mediastep.ca/\n            itemWebsiteURLPrefixProduct:
    https://gomua.mediastep.ca/product/\n            itemWebsiteURLPrefixDeal: https://gomua.mediastep.ca/deal/\n
    \           orderSalesEmail: no-reply@gosell.vn\n            orderSalesEmailReplyTo:
    cskh@beecow.com\n            orderSalesEmailBcc: order-dev@beecow.com\n            #
    vietnamCustomerServiceEmail: cskh@beecow.com\n            vietnamCustomerServicePhone:
    \"02873030800\"\n            vietnamCustomerServiceEmail: hotro@gosell.vn\n        beecowDeliveryInfoId:
    1\n        paymentService:\n            callback:\n                waitTime: 5000
    # Wait for VNPAY callback: 5s\n                webUrl: https://gomua.mediastep.ca/shopping-cart/callback\n
    \               mobileUrl: https://ca-api.mediastep.com/orderservices2/api/payment/result/vnpay\n
    \               mobileSmartUrl: gosell-smart-paypal-{0}://orderservices2/api/payment/result/paypal\n
    \               webVipDealUrl: https://debug.vipdeal.vn/shopping-cart/callback\n
    \               webStorefrontBaseDomain: https://{0}.mediastep.ca\n                webStorefrontUrlSurfix:
    /shopping-cart/callback\n                webStorefrontBookingUrlSurfix: /shopping-cart-service/callback\n
    \               mobileSmartPaypalCreateOrder: gosell-smart-paypal-{0}://shopping-cart/paypal-smart-checkout/create-order/callback\n
    \           epay:\n                callback:\n                    waitTime: 5000
    # Wait for VNPT EPAY callback: 5s\n                    webUrl: https://gomua.mediastep.ca/shopping-cart/callback/vnpt-epay\n
    \                   mobileUrl: gosell-buyer-{0}://orderservices2/api/payment/result/vnptepay\n
    \                   webStorefrontBaseDomain: https://{0}.mediastep.ca\n                    webStorefrontUrlSurfix:
    /shopping-cart/vnpt-epay/callback?shoppingCartType={0}\n                    webStorefrontBookingUrlSurfix:
    /shopping-cart/vnpt-epay/callback?shoppingCartType={0}\n                    webVipDealUrl:
    https://debug.vipdeal.vn/shopping-cart/vnpt-epay/callback\n            paypal:\n
    \               callback:\n                    waitTime: 5000 # Wait for PAYPAL
    callback: 5s\n                    webUrl: https://beecow.mediastep.ca/shopping-cart/callback/paypal\n
    \                   mobileUrl: gosell-paypal-{0}://orderservices2/api/payment/result/paypal\n
    \                   webStorefrontBaseDomain: https://{0}.mediastep.ca\n                    webStorefrontUrlSurfix:
    /shopping-cart/paypal/callback?shoppingCartType={0}\n                    webStorefrontBookingUrlSurfix:
    /shopping-cart/paypal/callback?shoppingCartType={0}\n                    webStorefrontSmartPaypalCreateOrder:
    /shopping-cart/paypal-smart-checkout/create-order/callback\n                    webVipDealUrl:
    https://beecow.mediastep.ca/shopping-cart/paypal/callback\n            momo:\n
    \               callback:\n                    waitTime: 5000 # Wait for MoMo
    callback: 5s\n                    webUrl: https://gosell.mediastep.ca/shopping-cart/callback/momo\n
    \                   mobileUrl: gosell-momo-{0}://orderservices2/api/payment/result/momo\n
    \                   webStorefrontBaseDomain: https://{0}.mediastep.ca\n                    webStorefrontUrlSurfix:
    /shopping-cart/momo/callback?shoppingCartType={0}\n                    webStorefrontBookingUrlSurfix:
    /shopping-cart/momo/callback?shoppingCartType={0}\n                    webVipDealUrl:
    https://gosell.mediastep.ca/shopping-cart/momo/callback\n        voucherHardCopyService:\n
    \           outputFromat: HTML\n            outputFolder: temp\n            htmlToPDFCommandTimeout:
    30000\n            htmlToPDFCommand: /home/huyen/programs/wkhtmltox/bin/wkhtmltopdf\n
    \           awsBucketName: beecow-voucher-development\n            awsLocation:
    new\n    delivery:\n        deliveryPlanTimeout: 15000 # Delivery plan suggestion
    timeout 15s\n        provider:\n            default: giaohangnhanh,giaohangtietkiem
    # selfdelivery is activated only if selected\n            vnpost:\n                enabled:
    false\n                userName: \"0909015765\"\n                password: 123456\n
    \               serviceBaseUrl: https://donhang.vnpost.vn\n                loyaltyCustomerCode:\n
    \               customerCode:\n                 services:\n                    -\n
    \                       id: EMS\n                        deliveryTimes: 2\n                    -\n
    \                       id: BK\n                        deliveryTimes: 3\n            giaohangnhanh:\n
    \               enabled: true\n                tax: 0.0 #0%\n                baseURL:
    https://testapipds.ghn.vn:9999/external/marketplace\n                clientID:
    192900\n                password: egGdykvdVyccpbbz6\n                apiKey: gYPDgvqzT2mybhUV\n
    \               apiSecretKey: 1E0410A33DA9B2CB342A6CCF0F912BF8\n            giaohangnhanh3:\n
    \               enabled: true\n                tax: 0.0 #0%\n                baseURL:
    https://dev-online-gateway.ghn.vn/apiv3-api/api/v1/apiv3\n                token:
    BeecowTokenTest\n                paymentTypeId: 1\n            giaohangtietkiem:\n
    \               enabled: true\n                baseURL: https://services-staging.ghtklab.com\n
    \               token: a6db76aD46e0D1109eDD0566F1C07644Df10853c\n            ghn:\n
    \               shiip:\n                    v2:\n                        baseURL:
    ${GHN_API_URL}/shiip/public-api\n                        token: ${GHN_API_TOKEN}\n
    \                       paymentTypeId: 1\n\nhystrix:\n    command:\n        default:\n
    \           execution:\n                isolation:\n                    # See
    https://github.com/spring-cloud/spring-cloud-netflix/issues/1330\n                    thread:\n
    \                       timeoutInMilliseconds: 20000\njhipster:\n    cache: #
    Cache configuration\n        redis: # Redis configuration\n            server:
    redis://redis-0.redis.redis:6379\nredission:\n    config:\n        nettyThreads:
    64\n"
  paymentServices-prod.yml: |
    beecow:
      payment:
        vnpay:
          vnpUrl: "http://sandbox.vnpayment.vn/paymentv2/vpcpay.html"
          baseURL: "https://sandbox.vnpayment.vn/merchant_webapi/merchant.html"
          vnpHashSecret: RLNRBZPWYCSEJLUDIUVFKKFNGMSPJFOY
          vnpMerchant: DEMO
          vnpTmnCode: BPHHJWKY
          vnpVersion: 2.1.0
          feign.client.logger.level: FULL
        vnptepay:
          baseURL: "https://gomua.mediastep.ca/epay/"
        chaipay:
          baseURL: "https://api.mediastep.com:443/paymentservices/payment-gateway/chaipay"
          atmAndCreditProvider: VNPAY
          atmAndCreditMethod: VNPAY_ALL
        paypal:
          baseURL: "https://ca-api.mediastep.ca/paymentservices/payment-gateway/paypal"
          sellerOnboard: "https://ca-api.mediastep.ca/paymentservices/shop-connect/paypal/onboarding"
      installment:
        vnpay:
          baseURL: "https://sandbox.vnpayment.vn/merchant_webapi/merchant.html"
          vnpUrl: "http://sandbox.vnpayment.vn/paymentv2/vpcpay.html"
          vnpHashSecret: FQXMYXANTOZKHBBZVWOLGABPUORZNCUD
          vnpMerchant: DEMO
          vnpTmnCode: MEDIAS04
          vnpVersion: 2.1.0
          feign.client.logger.level: FULL
    spring:
      jpa:
        properties:
          hibernate.cache.use_second_level_cache: true
          hibernate.cache.use_query_cache: false
    jhipster:
      cache:
        redis:
          server: "redis://redis-0.redis.redis:6379"
    application:
      dashboard: "https://ca-gosell.mediastep.ca"
      paymentProvider:
        epay:
          jsResource: "https://sandbox.megapay.vn:2810/pg_was/js/payment/layer/paymentClient.js"
          cssResource: >-
            https://sandbox.megapay.vn:2810/pg_was/css/payment/layer/paymentClient.css
          domain: "https://sandbox.megapay.vn:2810"
          merId: EPAY000001
          encodeKey: >-
            rf8whwaejNhJiQG2bsFubSzccfRc/iRYyGUn6SPmT6y/L7A2XABbu9y4GvCoSTOTpvJykFi6b1G0crU8et2O0Q==
        chaipay:
          jsResource: "https://static.chaipay.io/staging-chaipay.js"
          clientKey: ciayggHaxgVVdlLs
          secretKey: cdfa106efe12f79c00a5dcde6a70b30df0df094cf6d73d17b8c2b31756f7d7fc
        paypal:
          domain: "https://api-m.sandbox.paypal.com"
          clientKey: AXmcrHmqYGQolcmst1xc7CGkt2BCPHgu0D_3LyDPChC-bR6BfWty97xu8TqHfcRy20lpjePgdIPfsGOB
          secretKey: ELYmqgk-0-WKc2oUMUKiJKNiJSo6-LYElHQy50v9XIG_v555u2RzDxN7HTwPUBTYvhehZ6u9fQ-BY-Q-
          partnerId: MY3BVGDQQYER2
          merchantId: KXXB29BHQJPCE
      api:
        domain: "https://ca-api.mediastep.ca"
    logging:
      level:
        com.ms.payment: DEBUG
  shopeeServices-prod.yml: |
    application:
      shopee:
        partnerId: ${SHOPEE_ID}
        requestUrl: ${SHOPEE_URL}
        secretKey: ${SHOPEE_KEY}
        dashboardUrl: ${DASHBOARD_URL}
        authorizationUrl: ${application.shopee.requestUrl}/api/v2/shop/auth_partner?redirect={2}&partner_id={0}&sign={1}&timestamp={3}
        # authorizationUrl: ${application.shopee.requestUrl}/shop/auth_partner?redirect=${application.shopee.dashboardUrl}&id={0}&token={1}
        dashboardAuthRedirectPath: ${dashboard_auth_redirect_path}
      # shopee:
      #     partnerId: 851195
      #     requestUrl: "https://partner.uat.shopeemobile.com"
      #     secretKey: bb8524d07bee43253991c7df55112d4dd9f2c1ac2905bf3bc02ad63c4f074ea5
      #     dashboardUrl: "https://gosell.mediastep.ca/channel/shopee/account"
      #     authorizationUrl: "${application.shopee.requestUrl}/api/v2/shop/auth_partner?redirect={2}&partner_id={0}&sign={1}&timestamp={3}"
      #     dashboardAuthRedirectPath: "/channel/shopee/account"

    hystrix:
      command:
        default:
          execution:
            isolation:
              thread:
                timeoutInMilliseconds: 10000
    spring:
      data:
        elasticsearch:
          cluster-name:
          cluster-nodes: 172.16.111.23:9300
          client.transport.ignore_cluster_name: true
      redis:
        host: redis-0.redis.redis
        port: 6379
    logging:
      level:
        com.mediastep.beecow.shopee: DEBUG
  smsServices-prod.yml: |-
    configserver:
      name: JHipster Registry config server
      status: Connected to the JHipster Registry config server!
    eureka:
        instance:
            #prefer-ip-address: true
            #nonSecurePort: 80
            appname: smsServices
            #ip-address: ${EC2_LOCAL_IP}
    management:
        health:
            elasticsearch:
                enabled: false
    spring:
        cloud:
            stream:
                bindings:
                    smsChannel:
                        destination: smsChannel
                        contentType: application/json
                        group: smsServices
                        consumer:
                            header-mode: embeddedHeaders
  ssrStorefront-prod.yml: |-
    application:
      apiBaseUrl: 'https://ca-api.mediastep.ca'
      # resourceUrl: 'https://ssr.mediastep.ca'
      resourceUrl: 'https://ssr-resource-dev.gosell.vn'
      fontUrl: 'https://ca-ssr.mediastep.ca'
      createCustomerProfileUrl: 'https://ca-api.mediastep.ca/beehiveservices/api/customer-profiles/storefront/create'
      policyUrl: 'https://www.gosell.vn/dieu-khoan-chung-va-chinh-sach-bao-mat.html'
      gomuaUrl: 'https://gomua.mediastep.ca'
      dashboardDomain: 'https://ca-gosell.mediastep.ca'
      blogArticlesUrl: '${application.apiBaseUrl}/beehiveservices/api/blog-articles'
      sitemapStorageUrl: https://site-maps.mediastep.ca
      paymentProvider: VNPAY
      facebook:
        systemAppId: 1893566387566234
      paypal:
        domain: https://api-m.sandbox.paypal.com
        clientKey: AXmcrHmqYGQolcmst1xc7CGkt2BCPHgu0D_3LyDPChC-bR6BfWty97xu8TqHfcRy20lpjePgdIPfsGOB
        secretKey: ELYmqgk-0-WKc2oUMUKiJKNiJSo6-LYElHQy50v9XIG_v555u2RzDxN7HTwPUBTYvhehZ6u9fQ-BY-Q-
        partnerId: MY3BVGDQQYER2
    spring:
      zipkin:
        enabled: true
      redis:
        host: redis-0.redis.redis
        port: 6379
    jhipster:
      logging:
        logstash:
          enabled: true
      metrics:
        logs:
          enabled: true
      cache:
        redis:
          server: 'redis://${spring.redis.host}:${spring.redis.port}'
    hystrix:
      command:
        default:
          execution:
            isolation:
              thread:
                timeoutInMilliseconds: 80000

    eureka:
      instance:
        appname: ssrStorefront
  storeService-prod.yml: |
    logging:
      level:
        com.mediastep.beecow.store: DEBUG
    application:
      gosellSupportEmail: hotro@gosell.vn
      customerServiceEmail: hoa.le@mediastep.com
      # customerServiceEmail: live.str.bc@gmail.com
      gosellDomain: mediastep.com
      webGsDashboardDomain: https://ca-gosell.mediastep.com
      webGsDashboardCallBackUrl: /payment/callback
      webGsDashboardVNPTCallBackUrl: /payment/epay-callback?description={0}
    hystrix:
      command:
        default:
          execution:
            isolation:
              thread:
                timeoutInMilliseconds: 10000
        RestControllerCommand:
          execution:
            isolation:
              strategy: THREAD
              thread:
                timeoutInMilliseconds: 5000
                interruptOnTimeout: false
          fallback:
            enabled: false
        createOrUpdateShopInfo:
          execution:
            isolation:
              strategy: THREAD
              thread:
                timeoutInMilliseconds: 10000
                interruptOnTimeout: false
          fallback:
            enabled: false
        getStoreBranchesWithAvailableStockMultiple:
          execution:
            isolation:
              thread:
                timeoutInMilliseconds: 10000
          fallback:
            enabled: false
        createShopAffiliate:
          execution:
            isolation:
              thread:
                timeoutInMilliseconds: 20000
          fallback:
            enabled: false
    spring:
      redis:
        host: redis-0.redis.redis
        port: 6379
        database: 8
    jhipster:
      cache: # Cache configuration
        redis: # Redis configuration
          server: redis://redis-0.redis.redis:6379
    management:
      health:
        elasticsearch:
          enabled: false
  test.yml: tes
  themeServices.yml: "jhipster:\n    cache: # Cache configuration\n        redis:
    # Redis configuration\n            server: redis://redis-0.redis.redis:6379\napplication:\n
    \   jenkins:\n        baseUrl: cloud-ci-master.mediastep.com\n        basicAuth: ZmVpZ25jbGllbnQ6N2FlNWU5ZmI0ZjQ1Mjk0N2RjZDQ5OWIzZGNhYjA1Mjk=\n
    \       domain: landingpage.mediastep.ca/\n        buildPath:\n            publishLandingPage:
    /view/Websites/job/export-html-ca/buildWithParameters/\n
    \           unPublishLandingPage: /view/Websites/job/delete-html-ca/buildWithParameters/\n
    \   baseUrl: \"https://ca-api.mediastep.ca\"\n    resourceUrl: \"https://ssr-resource-dev.gosell.vn\"\n
    \   landingPageCreateCustomerProfile: \"/beehiveservices/api/customer-profiles/landing-page/create\"\n
    \   landingPageCreateOrder: \"/orderservices2/api/bc-orders/checkout/gosell/landing-page\"\n
    \   landingPageGetCountries: \"/catalogservices/api/countries\"\n    landingPageGetCitiesOfCountry:
    \"/catalogservices/api/country/${countryCode}/cities\"\n    landingPageGetDistrictsOfCity:
    \"/catalogservices/api/city/${cityCode}/districts\"\n    landingPageGetWardsOfDistrict:
    \"/catalogservices/api/district/${districtCode}/wards\"\n    "
  tiktokservices-prod.yml: |-
    jhipster:
        cache: # Cache configuration
            redis: # Redis configuration
                server: redis://redis-0.redis.redis:6379
    application:
        tiktok:
            waitingTime: 10000 #millisecond
            imageUrl: https://p16-oec-va.ibyteimg.com
            imageIdPrefix: tos-maliva-i-o3syd03w52-us
            tiktokAppKey: 67ne9bqf57ekv
            tiktokAppSerect: 3d9d4c4925dd3325a75bacafee7a5589e7f09150
  voucherServices-prod.yml: |-
    beecow:
        debugMode: true
        voucher:
            voucherService:
                code:
                    generationRetryTimes: 5
                voucherGettingExpiredTime: 3
                voucherGettingExpiredTimeUnit: DAYS
                voucherGettingExpiredDateCheckTime: 86400000 # Check every 5 minutes
            voucherHardCopyService:
                outputFromat: HTML
                outputFolder: /vouchers
                htmlToPDFCommandTimeout: 30000
                htmlToPDFCommand: /wkhtmltox/wkhtmltopdf
                awsBucketName: beecow-voucher-development
                awsLocation: new
                useThymeLeaf: true
    cloud:
        aws:
            region:
                static: ap-southeast-1
            stack:
                auto: false
            credentials:
                accessKey: AKIAJ2GQ7ZJQ43ICWXJA
                secretKey: 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
  zaloServices-prod.yml: "zalo:\n appID: 4511031267098261681\n appSecret: IS4GIQC3aD7TW1Q1IVUw\n
    codeVerifier: iuz4dxWsbZxYRK-b2KjjSNIDiOOZNMjT6quinzEwh30\n oauthUrl: https://oauth.zaloapp.com/v4/oa/permission
    \n redirectUri: https://ca-gosell.mediastep.ca/live-chat/zalo/resolve-token\njhipster:\n
    cache: # Cache configuration\n  redis: # Redis configuration\n   server: 'redis://redis-0.redis.redis:6379'\nspring:\n
    redis:\n  host: redis-0.redis.redis\n  port: 6379\n"

  userServices-prod.yml: |
    # ===================================================================
    # Spring Boot configuration for the "prod" profile.
    #
    # This configuration overrides the application.yml file.
    #
    # More information on profiles: https://www.jhipster.tech/profiles/
    # More information on configuration properties: https://www.jhipster.tech/common-application-properties/
    # ===================================================================

    # ===================================================================
    # Standard Spring Boot properties.
    # Full reference is available at:
    # http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
    # ===================================================================

    logging:
      level:
        ROOT: INFO
        io.github.jhipster: INFO
        com.mediastep.beecow.user: INFO

    eureka:
      instance:
        prefer-ip-address: true
      client:
        service-url:
          defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/

    management:
      metrics:
        export:
          prometheus:
            enabled: false

    spring:
      devtools:
        restart:
          enabled: false
        livereload:
          enabled: false
      datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://172.16.111.33:5432/postgres?currentSchema=user-services
        username: postgres
        password: postgres
        hikari:
          poolName: Hikari
          auto-commit: false
      jpa:
        database-platform: io.github.jhipster.domain.util.FixedPostgreSQL10Dialect
        show-sql: false
      data:
        jest:
          uri: http://172.16.111.23:9022
          readTimeout: 120000
          maxTotalConnection: 100
      # see https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-nosql.html#boot-features-connecting-to-elasticsearch-jest
      # Replace by 'prod, faker' to add the faker context and have sample data loaded in production
      liquibase:
        contexts: prod
      mail:
        host: localhost
        port: 25
        username:
        password:
      thymeleaf:
        cache: true
      sleuth:
        sampler:
          probability: 1 # report 100% of traces
      zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
        base-url: http://172.16.111.23:9411
        enabled: false
        locator:
          discovery:
            enabled: true
      redis:
        database: 0
        host: redis-0.redis.redis.svc.cluster.local
        port: 6379

    # ===================================================================
    # To enable TLS in production, generate a certificate using:
    # keytool -genkey -alias userservices -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
    #
    # You can also use Let's Encrypt:
    # https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
    #
    # Then, modify the server.ssl properties so your "server" configuration looks like:
    #
    # server:
    #   port: 443
    #   ssl:
    #     key-store: classpath:config/tls/keystore.p12
    #     key-store-password: password
    #     key-store-type: PKCS12
    #     key-alias: selfsigned
    #     # The ciphers suite enforce the security by deactivating some old and deprecated SSL cipher, this list was tested against SSL Labs (https://www.ssllabs.com/ssltest/)
    #     ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
    # ===================================================================
    server:
      port: 8200
      compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024

    # ===================================================================
    # JHipster specific properties
    #
    # Full reference is available at: https://www.jhipster.tech/common-application-properties/
    # ===================================================================

    jhipster:
      http:
        cache: # Used by the CachingHttpHeadersFilter
          timeToLiveInDays: 1461
      cache: # Cache configuration
        redis: # Redis configuration
          expiration: 3600 # By default objects stay 1 hour (in seconds) in the cache
          server: redis://${spring.redis.host}:${spring.redis.port}
          cluster: false
          # server: redis://localhost:6379,redis://localhost:16379,redis://localhost:26379
          # cluster: true
      security:
        authentication:
          jwt:
            # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
            # As this is the PRODUCTION configuration, you MUST change the default key, and store it securely:
            # - In the JHipster Registry (which includes a Spring Cloud Config server)
            # - In a separate `application-prod.yml` file, in the same folder as your executable JAR file
            # - In the `JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET` environment variable
            secret: b1b46ec3d7f8295e66c7e43d2f1c50eb94a8a5d4
            # Token is valid 24 hours
            token-validity-in-seconds: 86400
            token-validity-in-seconds-for-remember-me: 2592000
      mail: # specific JHipster mail property, for standard properties see MailProperties
        base-url: http://my-server-url-to-change # Modify according to your server's URL
      metrics:
        logs: # Reports metrics in the logs
          enabled: false
          report-frequency: 60 # in seconds
      logging:
        use-json-format: false # By default, logs are not in Json format
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
          enabled: false
          host: localhost
          port: 5000
          queue-size: 512
      audit-events:
        retention-period: 30 # Number of days before audit events are deleted.

    # ===================================================================
    # Application specific properties
    # Add your own application properties here, see the ApplicationProperties class
    # to have type-safe configuration, like in the JHipsterProperties above
    #
    # More documentation is available at:
    # https://www.jhipster.tech/common-application-properties/
    # ===================================================================

    # application:


kind: ConfigMap
metadata:
  creationTimestamp: null
  name: jhipster-registry
